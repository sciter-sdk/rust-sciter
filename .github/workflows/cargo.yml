name: Build-n-Test

on:
  push:
    branches:
    - master
    - travis

  pull_request:
    branches:
    - master

jobs:
  fetch:
    name: Fetch dependencies

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # macOS doesn't have Rust installed
        # https://help.github.com/en/actions/automating-your-workflow-with-github-actions/software-installed-on-github-hosted-runners#macos-1015
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Environment
        shell: bash
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
          SCITER_DEPS: ${{ runner.workspace }}
        run: |
          echo HOME is "$HOME"
          echo workspace is "$SCITER_DEPS"
          echo temp is "$TEMP"
          echo runner is "$RUNNER_CONTEXT"
          echo cargo is at `which cargo`
          echo rustc is at `which rustc`
          command -v cargo && rustc -vV
          echo done

      - name: Windows deps
        if: runner.os == 'Windows'
        run: curl -sSLo "%SCITER_DEPS%/sciter.dll" "https://raw.githubusercontent.com/c-smile/sciter-sdk/master/bin.win/x64/sciter.dll"
        shell: cmd
        env:
          SCITER_DEPS: ${{ runner.workspace }}

      - name: Linux deps
        if: runner.os == 'Linux'
        run: |
          curl -so "$SCITER_DEPS/libsciter-gtk.so" "https://raw.githubusercontent.com/c-smile/sciter-sdk/master/bin.lnx/x64/libsciter-gtk.so"
          sudo apt-get install libgtk-3-dev libgtk-3-0 libstdc++-6-pic -y
        env:
          SCITER_DEPS: ${{ runner.workspace }}

      - name: macOS deps
        if: runner.os == 'macOS'
        run: |
          curl -so "$SCITER_DEPS/sciter-osx-64.dylib" "https://raw.githubusercontent.com/c-smile/sciter-sdk/master/bin.osx/sciter-osx-64.dylib"
          curl https://sh.rustup.rs -sSf | sh -s -- --profile minimal -y
          source $HOME/.cargo/env
          echo cargo is at `which cargo`
          echo rustc is at `which rustc`
        env:
          SCITER_DEPS: ${{ runner.workspace }}

  build:
    needs: [fetch]
    name: Build and test

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Ensure Linux deps
      if: runner.os == 'Linux'
      run: sudo apt-get install libgtk-3-dev libgtk-3-0 libstdc++-6-pic -y

    - name: Build
      run: |
        cargo build --all
        cargo build --examples

    - name: Tests
      shell: bash
      env:
        SCITER_DEPS: ${{ runner.workspace }}
      run: |
        export PATH="$PATH:$SCITER_DEPS"
        echo workspace is "$SCITER_DEPS"
        echo workspace contents is
        ls $SCITER_DEPS
        echo run an example
        cargo run --example first
        cargo test --all
